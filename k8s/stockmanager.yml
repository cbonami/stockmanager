# As the orchestration need is simple to declare,
# Service and ReplicationController yamls files are combined.
apiVersion: v1
kind: ReplicationController
metadata:
  name: stockmanager-controller
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: stockmanager
    spec:
      containers:
      - image: eu.gcr.io/refined-algebra-215620/stockmanager:v1
        imagePullPolicy: Always
        name: stockmanager
        resources:
          requests:
            cpu: 50m
        ports:
        - containerPort: 8080
          name: http-server
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          periodSeconds: 2
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: stockmanager
  namespace: default
  labels:
    app: stockmanager
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: stockmanager
#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: stockmanager-ingress-resource
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/ssl-redirect: "false"
#spec:
#  rules:
#  - http:
#      paths:
#      - path: /
#        backend:
#          serviceName: stockmanager
#          servicePort: 80